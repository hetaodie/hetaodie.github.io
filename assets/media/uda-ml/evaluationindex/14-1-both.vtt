WEBVTT

1
00:00:00.280 --> 00:00:04.129
Now we'll study metrics that we can
use to evaluate regression models.

2
00:00:00.280 --> 00:00:04.129
现在我们来学习用于评估回归模型的指标

3
00:00:04.129 --> 00:00:06.960
第一个称为平均绝对误差

4
00:00:04.129 --> 00:00:06.960
The first one is called
mean absolute error.

5
00:00:06.960 --> 00:00:08.779
在这个示例中 我们有一些点

6
00:00:06.960 --> 00:00:08.779
In this example we have some points and

7
00:00:08.779 --> 00:00:11.489
we have drawn a line
that fits these points.

8
00:00:08.779 --> 00:00:11.489
并画了一条拟合这些点的线

9
00:00:11.490 --> 00:00:13.830
现在 我们想检查这条直线的误差如何

10
00:00:11.490 --> 00:00:13.830
Now we would like to check
how bad is this line?

11
00:00:13.830 --> 00:00:16.600
A good way to do this is to
just add the absolute values

12
00:00:13.830 --> 00:00:16.600
一个好方法就是将点到线的

13
00:00:16.600 --> 00:00:19.330
距离的绝对值求和

14
00:00:16.600 --> 00:00:19.330
of the distances from
the points to the line.

15
00:00:19.329 --> 00:00:22.250
Mean absolute error is very
easy to calculate in Sklearn.

16
00:00:19.329 --> 00:00:22.250
平均绝对误差在 Sklearn 中很容易计算

17
00:00:22.250 --> 00:00:26.314
在这个示例中 我们要做的是创建一个线性回归分类器对象

18
00:00:22.250 --> 00:00:26.314
What we do in this example is to create
a linear regression classifier object,

19
00:00:26.314 --> 00:00:27.910
称为 classifier

20
00:00:26.314 --> 00:00:27.910
called classifier.

21
00:00:27.910 --> 00:00:30.750
然后用函数来拟合这条直线

22
00:00:27.910 --> 00:00:30.750
Then we use the function
to fit the line.

23
00:00:30.750 --> 00:00:32.770
现在 我们用 y 表示点

24
00:00:30.750 --> 00:00:32.770
Now we can refer to the points as y, and

25
00:00:32.770 --> 00:00:37.740
用 classifier.predict(X) 表示模型所作的预测

26
00:00:32.770 --> 00:00:37.740
to the predictions made by
the model as classifier.predict(X).

27
00:00:37.740 --> 00:00:39.300
We will call this guesses.

28
00:00:37.740 --> 00:00:39.300
称之为 guesses

29
00:00:39.299 --> 00:00:43.250
最后 平均绝对误差就用

30
00:00:39.299 --> 00:00:43.250
And finally, the mean absolute
error is just calculated

31
00:00:43.250 --> 00:00:45.149
平均绝对误差函数来计算

32
00:00:43.250 --> 00:00:45.149
with the mean absolute error function.

33
00:00:45.149 --> 00:00:46.670
平均绝对误差有一个问题

34
00:00:45.149 --> 00:00:46.670
The mean absolute error has a problem,

35
00:00:46.670 --> 00:00:49.649
which is that the absolute value
function is not differentiable.

36
00:00:46.670 --> 00:00:49.649
即绝对值函数是不可微分的

37
00:00:49.649 --> 00:00:53.170
这不利于我们使用诸如梯度下降等方法

38
00:00:49.649 --> 00:00:53.170
And this may not be good if we want to
use methods such as grading dissent.

39
00:00:53.170 --> 00:00:57.870
要解决这个问题 我们使用更常见的均方误差

40
00:00:53.170 --> 00:00:57.870
To solve this problem, we use
the more common mean squared error.

41
00:00:57.869 --> 00:01:02.039
对于此度量 我们添加点和线之间的距离

42
00:00:57.869 --> 00:01:02.039
For this metric, we add the squares of
the distances between the points and

43
00:01:02.039 --> 00:01:03.320
的平方

44
00:01:02.039 --> 00:01:03.320
the line.

45
00:01:03.320 --> 00:01:06.500
均方误差也很容易在 Sklearn 中计算

46
00:01:03.320 --> 00:01:06.500
Mean square error is also very
easy to calculate in Sklearn,

47
00:01:06.500 --> 00:01:09.560
只是现在 我们要使用 mean_squared_error 函数

48
00:01:06.500 --> 00:01:09.560
except now we will use
the mean_squared_error function.

49
00:01:10.849 --> 00:01:14.500
现在我们学习一个非常常见的回归度量 称为“R2 分数”

50
00:01:10.849 --> 00:01:14.500
Now we will learn a very common
regression metric called R2 Score.

51
00:01:14.500 --> 00:01:18.250
R2 Score is based on comparing our
model to the simplest possible model.

52
00:01:14.500 --> 00:01:18.250
R2 分数通过将我们的模型与最简单的可能模型相比得出

53
00:01:18.250 --> 00:01:19.359
那么思考一下

54
00:01:18.250 --> 00:01:19.359
So let's think,

55
00:01:19.359 --> 00:01:23.789
what is the simplest possible
model that fits a bunch of points?

56
00:01:19.359 --> 00:01:23.789
拟合一堆点的最简单的可能模型是什么呢？

57
00:01:23.790 --> 00:01:27.920
Well, a pretty simple one is just to
take the average of all the values and

58
00:01:23.790 --> 00:01:27.920
那就是取所有值的平均值 然后

59
00:01:27.920 --> 00:01:29.930
draw a horizontal line through them.

60
00:01:27.920 --> 00:01:29.930
画一条穿过它们的水平直线

61
00:01:29.930 --> 00:01:32.410
然后我们可以计算出这个模型的均方误差

62
00:01:29.930 --> 00:01:32.410
And then we can calculate the mean
squared error for this model.

63
00:01:32.409 --> 00:01:34.689
已知 简单模型的均方误差

64
00:01:32.409 --> 00:01:34.689
We would hope that
the mean squared error for

65
00:01:34.689 --> 00:01:39.539
大于线性回归模型的误差

66
00:01:34.689 --> 00:01:39.539
the simple model is larger than
the error for a linear regression model.

67
00:01:39.540 --> 00:01:41.859
The question is, how much larger?

68
00:01:39.540 --> 00:01:41.859
那么问题是大多少？

69
00:01:41.859 --> 00:01:43.780
Well, we can divide the error for

70
00:01:41.859 --> 00:01:43.780
我们可以用线性回归模型的误差

71
00:01:43.780 --> 00:01:48.670
the linear regression model by
the error for the simple model, and

72
00:01:43.780 --> 00:01:48.670
除以简单模型的误差 然后

73
00:01:48.670 --> 00:01:52.689
then subtract the result from 1,
and we will call this the R2 score.

74
00:01:48.670 --> 00:01:52.689
用 1 减这个结果 我们称之为 R2 分数

75
00:01:52.689 --> 00:01:57.319
如果这个模型不太好 这两个误差将很接近

76
00:01:52.689 --> 00:01:57.319
If the model is not very good, then
the two errors should be similar and

77
00:01:57.319 --> 00:02:01.109
而这个量应接近 1

78
00:01:57.319 --> 00:02:01.109
this quantity here
should be close to one.

79
00:02:01.109 --> 00:02:04.099
那么整个 R2 分数应接近 0

80
00:02:01.109 --> 00:02:04.099
So the whole R2 score
should be close to 0.

81
00:02:04.099 --> 00:02:08.310
如果模型较好 那么线性回归模型对的均方误差

82
00:02:04.099 --> 00:02:08.310
If the model is good, then the mean
squared error for the linear regression

83
00:02:08.310 --> 00:02:12.849
应比简单模型的均方误差小很多

84
00:02:08.310 --> 00:02:12.849
model should be a lot smaller than the
mean squared error for the simple model.

85
00:02:12.849 --> 00:02:15.719
那么这个比例就很小

86
00:02:12.849 --> 00:02:15.719
Therefore this ratio shift is small, and

87
00:02:15.719 --> 00:02:19.229
then the R2 square should
be very close to 1.

88
00:02:15.719 --> 00:02:19.229
而 R2 分数将非常接近 1

89
00:02:19.229 --> 00:02:22.869
总结来说 如果 R2 分数接近 1 模型就不错

90
00:02:19.229 --> 00:02:22.869
In conclusion, if the R2 score is
close to 1, then the model is good.

91
00:02:22.870 --> 00:02:25.770
And if it's close to zero,
then the model is not much

92
00:02:22.870 --> 00:02:25.770
如果接近 0 那么模型

93
00:02:25.770 --> 00:02:29.250
better than just guessing the average
of the values of the points.

94
00:02:25.770 --> 00:02:29.250
基本相当于用点的平均值来猜测

95
00:02:29.250 --> 00:02:34.435
R2 score is very simple to calculate
in Sklearn with the R2 score function.

96
00:02:29.250 --> 00:02:34.435
使用 sklearn 中的 r2_score 函数 很容易计算 R2 分数

97
00:02:34.435 --> 00:02:37.699
Here's a small example where we
calculated the R2 score between

98
00:02:34.435 --> 00:02:37.699
这里是一个小示例 我们计算了

99
00:02:37.699 --> 00:02:40.799
the true values in blue, and
the predicted values in green.

100
00:02:37.699 --> 00:02:40.799
蓝色的真值和绿色的预测值之间的 R2 分数

