WEBVTT

1
00:00:00.000 --> 00:00:02.759
Now, we have learned precision and recall so as we've

2
00:00:00.000 --> 00:00:02.759
我们已经学习了精度和召回率

3
00:00:02.759 --> 00:00:06.679
医疗模型的精度是 55.7%

4
00:00:02.759 --> 00:00:06.679
seen our medical model has a precision of 55.7%,

5
00:00:06.679 --> 00:00:09.519
召回率是 83.3%

6
00:00:06.679 --> 00:00:09.519
and a recall of 83.3%.

7
00:00:09.519 --> 00:00:11.524
It's supposed to be a hierarchical model.

8
00:00:09.519 --> 00:00:11.524
它应该是个层次模型

9
00:00:11.525 --> 00:00:16.500
垃圾邮件检测器的精度是 76.9% 召回率是 37%

10
00:00:11.525 --> 00:00:16.500
Our spam detector has the precision of 76.9% and a recall of 37%,

11
00:00:16.500 --> 00:00:19.259
and it's supposed to be a high-precision model.

12
00:00:16.500 --> 00:00:19.259
它应该是个高精度模型

13
00:00:19.260 --> 00:00:22.790
现在的问题是 我们需要始终计算两个数字吗？

14
00:00:19.260 --> 00:00:22.790
Now the question is, do we want to be carrying two numbers around all the time?

15
00:00:22.789 --> 00:00:26.179
Do we want to carry precision in one pocket and recall in the other one,

16
00:00:22.789 --> 00:00:26.179
我们需要在一个口袋里装着精度 另一个装着召回率

17
00:00:26.179 --> 00:00:27.359
然后任何时候做出决策时

18
00:00:26.179 --> 00:00:27.359
and always be looking at both,

19
00:00:27.359 --> 00:00:29.030
始终查看这两个值吗？

20
00:00:27.359 --> 00:00:29.030
any time we make a decision?

21
00:00:29.030 --> 00:00:30.420
这样不太方便吧？

22
00:00:29.030 --> 00:00:30.420
Well that's inconvenient, right?

23
00:00:30.420 --> 00:00:33.859
我们只希望计算一个得分

24
00:00:30.420 --> 00:00:33.859
We kind of want to only have one score.

25
00:00:33.859 --> 00:00:38.409
问题是 如何将这两个得分合二为一？

26
00:00:33.859 --> 00:00:38.409
So the question is, how do we combine these two scores into one?

27
00:00:38.409 --> 00:00:40.779
Can we think of a way?

28
00:00:38.409 --> 00:00:40.779
能找出一种方式吗？

29
00:00:40.780 --> 00:00:43.109
很简单的方法是计算平均值 对吧

30
00:00:40.780 --> 00:00:43.109
Well, a pretty simple way, is taking the average, right?

31
00:00:43.109 --> 00:00:45.405
我们计算精度和召回率的平均值

32
00:00:43.109 --> 00:00:45.405
So let's take the average of precision and recall.

33
00:00:45.405 --> 00:00:47.880
左侧是 69.5%

34
00:00:45.405 --> 00:00:47.880
In the left, we get 69.5%,

35
00:00:47.880 --> 00:00:50.955
in the right, we get 56.95%.

36
00:00:47.880 --> 00:00:50.955
右侧是 56.95%

37
00:00:50.954 --> 00:00:52.439
指标还可以

38
00:00:50.954 --> 00:00:52.439
And that's an okay metric,

39
00:00:52.439 --> 00:00:54.539
但是我相信你可能会想到

40
00:00:52.439 --> 00:00:54.539
but I'm sure you're probably thinking in your head,

41
00:00:54.539 --> 00:00:56.784
与准确率没啥区别吧

42
00:00:54.539 --> 00:00:56.784
that's not very different than accuracy, right?

43
00:00:56.784 --> 00:00:58.479
That's not saying too much.

44
00:00:56.784 --> 00:00:58.479
提供的信息并不多

45
00:00:58.479 --> 00:01:00.882
判断这种平均值并不是最佳策略的方法是

46
00:00:58.479 --> 00:01:00.882
And the way to see how this average is not the best idea,

47
00:01:00.883 --> 00:01:02.510
is to try and in the extreme examples,

48
00:01:00.883 --> 00:01:02.510
尝试一些极端示例

49
00:01:02.509 --> 00:01:04.489
例如信用卡欺诈示例

50
00:01:02.509 --> 00:01:04.489
so the credit card fraud example.

51
00:01:04.489 --> 00:01:07.709
So again, we have a bunch of good and fraudulent credit card transactions.

52
00:01:04.489 --> 00:01:07.709
我们有一堆良好的信用卡交易和欺诈性交易

53
00:01:07.709 --> 00:01:09.509
我们选择一个糟糕的模型 1

54
00:01:07.709 --> 00:01:09.509
And let's pick a terrible model one,

55
00:01:09.510 --> 00:01:11.900
which says, all transactions are good.

56
00:01:09.510 --> 00:01:11.900
该模型表示所有交易都是良好的交易

57
00:01:11.900 --> 00:01:13.920
So what does the precision of this model?

58
00:01:11.900 --> 00:01:13.920
这个模型的精度是多少？

59
00:01:13.920 --> 00:01:16.980
Well the precision is, out of the ones we classified as bad,

60
00:01:13.920 --> 00:01:16.980
精度是分类为欺诈性的交易当中

61
00:01:16.980 --> 00:01:18.900
有多少是欺诈性交易

62
00:01:16.980 --> 00:01:18.900
how many of them are bad?

63
00:01:18.900 --> 00:01:21.955
这个数字有问题 因为我们没有将任何交易标记为欺诈性交易

64
00:01:18.900 --> 00:01:21.955
That's a questionable number, because we didn't label anything as fraudulent,

65
00:01:21.954 --> 00:01:24.799
就相当于 0 除以 0 这是不可取的

66
00:01:21.954 --> 00:01:24.799
so it's kind of zero divided by zero which is undefined.

67
00:01:24.799 --> 00:01:27.965
But it makes sense to think of it as 100%, right?

68
00:01:24.799 --> 00:01:27.965
但是可以看做 100% 对吧

69
00:01:27.965 --> 00:01:31.380
Since we made zero mistakes among the ones who predicted positive,

70
00:01:27.965 --> 00:01:31.380
因为在预测为阳性的数据点当中 我们犯了 0 个错误

71
00:01:31.379 --> 00:01:34.079
which is a precision tries to measure.

72
00:01:31.379 --> 00:01:34.079
也就是我们尝试衡量的精度

73
00:01:34.079 --> 00:01:36.629
So let's say this model has a 100% precision.

74
00:01:34.079 --> 00:01:36.629
假设这个模型的精度是 100%

75
00:01:36.629 --> 00:01:38.640
Now, as for the recall, the recall is,

76
00:01:36.629 --> 00:01:38.640
召回率则是

77
00:01:38.640 --> 00:01:41.799
how many of the fraudulent transactions do we catch?

78
00:01:38.640 --> 00:01:41.799
我们发现了多少欺诈性交易

79
00:01:41.799 --> 00:01:43.439
Well since we caught none,

80
00:01:41.799 --> 00:01:43.439
因为一个也没发现

81
00:01:43.439 --> 00:01:45.054
this number is zero.

82
00:01:43.439 --> 00:01:45.054
所以该数字是 0

83
00:01:45.055 --> 00:01:48.045
精度和召回率的平均值是 50%

84
00:01:45.055 --> 00:01:48.045
So the average between precision and recall is 50%,

85
00:01:48.045 --> 00:01:51.180
since it's the average of a hundred and zero.

86
00:01:48.045 --> 00:01:51.180
也就是 100 和 0 的平均值

87
00:01:51.180 --> 00:01:55.200
现在的问题是 这个糟糕模型的得分可以是 50% 吗？

88
00:01:51.180 --> 00:01:55.200
Now the question is, do I want to give this horrendous model of 50%?

89
00:01:55.200 --> 00:01:58.064
对如此糟糕的模型来说 似乎很高

90
00:01:55.200 --> 00:01:58.064
It kind of seems like a really high score for such a lousy model.

91
00:01:58.064 --> 00:02:01.090
我其实希望给它一个非常低的得分 甚至是 0

92
00:01:58.064 --> 00:02:01.090
I kind of want to give it a much lower score, perhaps even zero.

93
00:02:01.090 --> 00:02:04.049
看来平均值并不理想 我们再看看相对立的情形

94
00:02:01.090 --> 00:02:04.049
For average is not that good. Now, let's try the opposite.

95
00:02:04.049 --> 00:02:07.599
假设模型表示所有交易都是欺诈性交易

96
00:02:04.049 --> 00:02:07.599
Let's try the model that says that all transactions are fraudulent.

97
00:02:07.599 --> 00:02:09.859
该模型的精度是多少？

98
00:02:07.599 --> 00:02:09.859
What is the precision of this model?

99
00:02:09.860 --> 00:02:12.745
Well, out of all the transactions that are said are fraudulent,

100
00:02:09.860 --> 00:02:12.745
在所有表示为欺诈性的交易当中

101
00:02:12.745 --> 00:02:15.590
472 were actually fraudulent.

102
00:02:12.745 --> 00:02:15.590
472 个实际上是欺诈性交易

103
00:02:15.590 --> 00:02:22.680
因此精度是 472/284,807 等于 0.16%

104
00:02:15.590 --> 00:02:22.680
So the precision is 472 divided by 284,807, which is 0.16%.

105
00:02:22.680 --> 00:02:24.599
召回率实际上很高

106
00:02:22.680 --> 00:02:24.599
And the recall is actually pretty good,

107
00:02:24.599 --> 00:02:29.019
because out of the 472 fraudulent transactions, I caught all of them.

108
00:02:24.599 --> 00:02:29.019
因为在 472 个欺诈性交易中 我发现了所有的交易

109
00:02:29.020 --> 00:02:34.045
因此召回率是 472/472 等于 100%

110
00:02:29.020 --> 00:02:34.045
So the recall is 472 divided by 472 which is 100%.

111
00:02:34.044 --> 00:02:39.524
二者的平均值是 0.16 和 100 的均值 结果为 50.08

112
00:02:34.044 --> 00:02:39.524
So again, the average of the two is the average of .16 on a hundred, which is 50.08.

113
00:02:39.525 --> 00:02:41.875
对于这个糟糕的模型来说 得分很高了

114
00:02:39.525 --> 00:02:41.875
Again, a very high score for a really lousy model.

115
00:02:41.875 --> 00:02:43.164
我们希望给其一个更低的得分

116
00:02:41.875 --> 00:02:43.164
So we want to give it a lower score,

117
00:02:43.164 --> 00:02:45.204
或许接近 0 的值

118
00:02:43.164 --> 00:02:45.204
maybe something close to zero.

119
00:02:45.205 --> 00:02:47.825
So in summary, average is not the greatest thing in

120
00:02:45.205 --> 00:02:47.825
总结下 如果精度或召回率非常低的话

121
00:02:47.824 --> 00:02:51.204
principle if either precision or recall is very low.

122
00:02:47.824 --> 00:02:51.204
那么平均值就不太合适

123
00:02:51.205 --> 00:02:52.755
We want the number to be low,

124
00:02:51.205 --> 00:02:52.755
我们希望得分很低

125
00:02:52.754 --> 00:02:54.574
虽然另一个数字很高

126
00:02:52.754 --> 00:02:54.574
even if the other one is high.

127
00:02:54.574 --> 00:02:56.534
现在介绍一个解决方案

128
00:02:54.574 --> 00:02:56.534
So here's a solution.

129
00:02:56.534 --> 00:02:59.400
还有一种平均值 叫做调和平均数

130
00:02:56.534 --> 00:02:59.400
There's another type of average called the harmonic mean,

131
00:02:59.400 --> 00:03:00.985
and it works as follows.

132
00:02:59.400 --> 00:03:00.985
原理如下

133
00:03:00.985 --> 00:03:04.935
假设有两个数字 X 和 Y X 小于 Y

134
00:03:00.985 --> 00:03:04.935
Let's say we have two numbers X and Y. X is smaller than Y,

135
00:03:04.935 --> 00:03:07.965
这是算术平均数

136
00:03:04.935 --> 00:03:07.965
and we have the arithmetic mean over here.

137
00:03:07.965 --> 00:03:11.670
也就是 (x+y)/2

138
00:03:07.965 --> 00:03:11.670
That is the average X plus Y divided by two.

139
00:03:11.669 --> 00:03:13.709
然后是调和平均数

140
00:03:11.669 --> 00:03:13.709
And we have something called the harmonic mean,

141
00:03:13.710 --> 00:03:18.240
即 2xy/(x+y)

142
00:03:13.710 --> 00:03:18.240
which is defined by two X Y divided by X plus Y.

143
00:03:18.240 --> 00:03:19.460
And it's kind of an average two,

144
00:03:18.240 --> 00:03:19.460
它也是一种平均值

145
00:03:19.460 --> 00:03:21.224
如果两个数字相等

146
00:03:19.460 --> 00:03:21.224
in the sense that if the two numbers are equal,

147
00:03:21.224 --> 00:03:22.799
则得出 X 或 Y

148
00:03:21.224 --> 00:03:22.799
we get X or Y,

149
00:03:22.800 --> 00:03:25.380
and it always lies between X and Y.

150
00:03:22.800 --> 00:03:25.380
它始终在 X 和 Y 之间

151
00:03:25.379 --> 00:03:27.240
但实际上调和平均数始终

152
00:03:25.379 --> 00:03:27.240
But actually, it's a mathematical fact that

153
00:03:27.240 --> 00:03:31.150
the harmonic mean is always less than the arithmetic mean.

154
00:03:27.240 --> 00:03:31.150
小于算术平均数 这是个数学现象

155
00:03:31.150 --> 00:03:33.400
So it's kind of closer to the smaller number,

156
00:03:31.150 --> 00:03:33.400
因此与更大的数字相比

157
00:03:33.400 --> 00:03:35.129
than to the higher number.

158
00:03:33.400 --> 00:03:35.129
它更接近于更小的数字

159
00:03:35.129 --> 00:03:38.590
So it's a good example if the precision is one and the recall is zero.

160
00:03:35.129 --> 00:03:38.590
如果精度是 1 召回率是 0

161
00:03:38.590 --> 00:03:41.830
The average is 0.5, but the harmonic mean is,

162
00:03:38.590 --> 00:03:41.830
则平均值是 0.5 但调和平均数是

163
00:03:41.830 --> 00:03:44.570
代入公式的话 结果是 0

164
00:03:41.830 --> 00:03:44.570
if you plug it in the formula, zero.

165
00:03:44.569 --> 00:03:48.659
Another example, if the precision is 0.2 and the recall is 0.8,

166
00:03:44.569 --> 00:03:48.659
再看个示例 如果精度是 0.2 召回率是 0.8

167
00:03:48.659 --> 00:03:50.604
那么算术平均数是 0.5

168
00:03:48.659 --> 00:03:50.604
then the arithmetic mean is 0.5,

169
00:03:50.604 --> 00:03:52.869
but the harmonic mean is 0.32.

170
00:03:50.604 --> 00:03:52.869
但是调和平均数是 0.32

171
00:03:52.870 --> 00:03:55.259
So it closer to the lower number.

172
00:03:52.870 --> 00:03:55.259
因此更接近更低的数字

173
00:03:55.259 --> 00:03:58.364
从现在开始 我们不再使用平均值或算术平均数

174
00:03:55.259 --> 00:03:58.364
So from now on, we will not be using the average or arithmetic mean,

175
00:03:58.365 --> 00:04:00.420
but we will be using the harmonic mean.

176
00:03:58.365 --> 00:04:00.420
而是使用调和平均数

177
00:04:00.419 --> 00:04:03.319
它就叫做 F1 得分

178
00:04:00.419 --> 00:04:03.319
And that's going to be called F1 score.

179
00:04:03.319 --> 00:04:08.094
正如我们提到的 F1 得分更接近于精度和召回率中最小的值

180
00:04:03.319 --> 00:04:08.094
And as we said, the F1 score is closer to the smallest between precision and recall.

181
00:04:08.094 --> 00:04:10.094
因此如果其中一个值非常低

182
00:04:08.094 --> 00:04:10.094
So if one of this particularly low,

183
00:04:10.094 --> 00:04:12.900
那么 F1 得分就会发出提醒

184
00:04:10.094 --> 00:04:12.900
the F1 score kind of raises a flag.

185
00:04:12.900 --> 00:04:15.008
平均值就相当于如果一个值不错

186
00:04:12.900 --> 00:04:15.008
The average kind of says, if one is good,

187
00:04:15.008 --> 00:04:17.300
但另一个很糟糕 那么平均值还可以

188
00:04:15.008 --> 00:04:17.300
but the other one is bad, then the average is okay.

189
00:04:17.300 --> 00:04:18.660
但是对于 F1 得分来说

190
00:04:17.300 --> 00:04:18.660
But the F1 score,

191
00:04:18.660 --> 00:04:21.115
如果其中一个值很小 它就会发出提醒

192
00:04:18.660 --> 00:04:21.115
raises the flag if one of them is small.

193
00:04:21.115 --> 00:04:25.259
我们现在可以回到信用卡欺诈示例并计算 F1 得分

194
00:04:21.115 --> 00:04:25.259
So we can now go back to the credit card fraud example and calculate the F1 score.

195
00:04:25.259 --> 00:04:29.159
Since it's going to be the harmonic mean between the precision which is 100%,

196
00:04:25.259 --> 00:04:29.159
因为它是精度（即 100%）和召回率（即 0）

197
00:04:29.160 --> 00:04:31.085
and the recall which is zero.

198
00:04:29.160 --> 00:04:31.085
之间的调和平均数

199
00:04:31.084 --> 00:04:32.250
We can plug in the formula,

200
00:04:31.084 --> 00:04:32.250
我们代入公式里

201
00:04:32.250 --> 00:04:35.069
and actually get an F1 score of zero.

202
00:04:32.250 --> 00:04:35.069
得出 F1 得分为 0

203
00:04:35.069 --> 00:04:37.439
This is much closer to what the models should score.

204
00:04:35.069 --> 00:04:37.439
这个与模型应该获得的得分接近多了

205
00:04:37.439 --> 00:04:38.910
So, in the following two quizzes,

206
00:04:37.439 --> 00:04:38.910
在下面的两道测验中

207
00:04:38.910 --> 00:04:43.140
we'll let you calculate the F1 score of the medical model and the spam email model.

208
00:04:38.910 --> 00:04:43.140
我们将请你计算医疗模型和垃圾邮件模型的 F1 得分

