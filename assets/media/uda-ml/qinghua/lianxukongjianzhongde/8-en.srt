1
00:00:00,000 --> 00:00:01,649
A simple extension to

2
00:00:01,649 --> 00:00:06,834
linear function approximation can help us capture non-linear relationships.

3
00:00:06,835 --> 00:00:10,734
At the heart of this approach is our feature transformation.

4
00:00:10,734 --> 00:00:13,355
Remember how we defined it in a generic sense?

5
00:00:13,355 --> 00:00:18,635
Something that takes a state or a state action pair and produces a feature vector?

6
00:00:18,635 --> 00:00:22,880
Each element of this vector can be produced by a separate function,

7
00:00:22,879 --> 00:00:24,964
which can be non-linear.

8
00:00:24,964 --> 00:00:29,480
For example, let's assume our state S is a single real number.

9
00:00:29,480 --> 00:00:32,929
Then we can define say X1(S) equals S,

10
00:00:32,929 --> 00:00:35,884
X2(S) equals X squared,

11
00:00:35,884 --> 00:00:39,250
X3(S) equals X cube, et cetera.

12
00:00:39,250 --> 00:00:43,600
These are called Kernel Functions or Basis Functions.

13
00:00:43,600 --> 00:00:47,410
They transform the input state into a different space.

14
00:00:47,409 --> 00:00:49,899
But note that since our value function is still

15
00:00:49,899 --> 00:00:52,614
defined as a linear combination of these features,

16
00:00:52,615 --> 00:00:56,130
we can still use linear function approximation.

17
00:00:56,130 --> 00:00:59,365
What this allows the value function to do is represent

18
00:00:59,365 --> 00:01:03,815
non-linear relationships between the input state and output value.

19
00:01:03,814 --> 00:01:08,679
Radial Basis Functions are a very common form of Kernels used for this purpose.

20
00:01:08,680 --> 00:01:10,175
You might've heard of them.

21
00:01:10,174 --> 00:01:13,899
Essentially, think of the current state S as

22
00:01:13,900 --> 00:01:19,380
a location in the continuous state space here depicted as a rectangular plane.

23
00:01:19,379 --> 00:01:22,174
Each Basis Function is shown as a blob.

24
00:01:22,174 --> 00:01:24,954
The closer the state is to the center of the blob,

25
00:01:24,954 --> 00:01:27,579
the higher the response returned by the function.

26
00:01:27,579 --> 00:01:29,109
And the farther you go,

27
00:01:29,109 --> 00:01:32,179
the response falls off gradually with the radius.

28
00:01:32,180 --> 00:01:34,985
Hence the name Radial Basis Function.

29
00:01:34,984 --> 00:01:37,659
Mathematically, this can be achieved by associating

30
00:01:37,659 --> 00:01:42,489
a Gaussian Kernel with each Basis Function with its mean serving

31
00:01:42,489 --> 00:01:45,324
as the center of the blob and standard deviation

32
00:01:45,325 --> 00:01:50,280
determining how sharply or smoothly the response falls off.

33
00:01:50,280 --> 00:01:52,474
So, for any given state,

34
00:01:52,474 --> 00:01:55,009
we can reduce the state representation to

35
00:01:55,010 --> 00:01:58,850
a vector of responses from these Radial Basis Functions.

36
00:01:58,849 --> 00:02:00,169
From that point onwards,

37
00:02:00,170 --> 00:02:03,000
we can use our same function approximation method.

