1
00:00:00,000 --> 00:00:01,750
我们来总结下

2
00:00:01,750 --> 00:00:05,025
我们的数据是所有学生

3
00:00:05,025 --> 00:00:09,600
蓝点表示被录取的学生 红点表示被拒的学生

4
00:00:09,599 --> 00:00:12,480
我们的模型是一个方程

5
00:00:12,480 --> 00:00:16,260
2*Test + Grades - 18

6
00:00:16,260 --> 00:00:18,660
得出这个界线

7
00:00:18,660 --> 00:00:22,079
即得分为 0 的点 然后是预测

8
00:00:22,079 --> 00:00:26,409
预测为：如果得分大于等于 0 则学生被录取

9
00:00:26,410 --> 00:00:29,210
如果得分为负数 则被拒

10
00:00:29,210 --> 00:00:32,579
现在我们将介绍一种概念 叫做感知器 它是神经网络的基础构成组件

11
00:00:32,579 --> 00:00:36,369
用小图表来表示我们的方程

12
00:00:36,369 --> 00:00:38,579
构建方法如下

13
00:00:38,579 --> 00:00:42,399
我们将数据和界线拟合到一个节点里

14
00:00:42,399 --> 00:00:44,820
现在有了小的输入节点

15
00:00:44,820 --> 00:00:48,024
这里是测试和评分

16
00:00:48,024 --> 00:00:52,435
从这里可以看到一个示例 Test = 7 Grades = 6

17
00:00:52,435 --> 00:00:55,557
该感知器会画出点 (7.6)

18
00:00:55,557 --> 00:00:59,160
检查该点是在正数区域 还是负数区域

19
00:00:59,159 --> 00:01:02,134
如果在正数区域 则返回是

20
00:01:02,134 --> 00:01:05,200
如果在负数区域 则返回否

21
00:01:05,200 --> 00:01:12,695
我们的方程是 Score = 2*Test + 1*Grade - 18

22
00:01:12,694 --> 00:01:15,119
我们的预测是：如果得分为正数或零

23
00:01:15,120 --> 00:01:17,486
则录取该学生

24
00:01:17,486 --> 00:01:20,835
如果得分为负数 则拒绝该学生

25
00:01:20,834 --> 00:01:27,589
这些权重 2 1 和 -18 对方程进行了限定

26
00:01:27,590 --> 00:01:30,540
我们将在图表中将它们用作标签

27
00:01:30,540 --> 00:01:34,450
2 和 1 分别标在代表 x1 x2 走向的线上

28
00:01:34,450 --> 00:01:38,454
偏差项 -18 将表示节点

29
00:01:38,454 --> 00:01:40,754
因此 当我们看到具有这些标签的节点

30
00:01:40,754 --> 00:01:44,174
就可以想出它们生成的线性方程

31
00:01:44,174 --> 00:01:48,119
另一种表示该节点的方法是将偏差看做输入的一部分

32
00:01:48,120 --> 00:01:51,825
W1 乘以 X1 W2 乘以 X2

33
00:01:51,825 --> 00:01:54,725
很自然地就会想到 b 乘以 1

34
00:01:54,724 --> 00:01:58,409
所以我们增加值为 1 的输入节点 并将偏差 b 标在其线上

35
00:01:58,409 --> 00:02:01,859
该节点将来自各输入节点的值乘以

36
00:02:01,859 --> 00:02:05,129
其对应线上的权重值

37
00:02:05,129 --> 00:02:08,144
这里是 7*1

38
00:02:08,145 --> 00:02:11,865
6*2 和 1*-18

39
00:02:11,865 --> 00:02:13,770
然后将它们相加

40
00:02:13,770 --> 00:02:16,725
最后检查结果是否大于等于 0

41
00:02:16,724 --> 00:02:20,989
如果大于等于 0 那么该节点返回是或值 1

42
00:02:20,990 --> 00:02:25,170
如果不大于等于 0 那么该节点返回否或值 0

43
00:02:25,169 --> 00:02:29,280
在这种情况下 因为方程返回 1 即大于 0

44
00:02:29,280 --> 00:02:34,419
因此该节点将返回值 1 表示学生被录取

45
00:02:34,419 --> 00:02:37,155
在这节课 我们将用到两种表示方法

46
00:02:37,155 --> 00:02:39,104
虽然第二种用的次数会更多

47
00:02:39,104 --> 00:02:40,530
在更一般的情况下

48
00:02:40,530 --> 00:02:42,419
节点将是这样的

49
00:02:42,419 --> 00:02:43,905
这是我们的节点

50
00:02:43,905 --> 00:02:48,620
有 n 个输入 值为 X1 一直到 Xn 以及 1

51
00:02:48,620 --> 00:02:55,034
权重从 W1 一直到 Wn 的边 以及 b

52
00:02:55,034 --> 00:02:57,329
对应的是偏置单元

53
00:02:57,330 --> 00:03:02,805
然后节点计算线性方程 Wx + b

54
00:03:02,805 --> 00:03:08,825
也就是 i 等于 1 一直到 n WiXi 的和 加上 b

55
00:03:08,824 --> 00:03:11,759
然后 该节点会检查值是否大于等于 0

56
00:03:11,759 --> 00:03:16,560
如果是 则返回值 1 表示是

57
00:03:16,560 --> 00:03:21,189
如果不是 则返回值 0 表示否

58
00:03:21,189 --> 00:03:25,987
注意 这里我们使用了隐函数 称为阶跃函数

59
00:03:25,987 --> 00:03:27,150
阶跃函数的作用是

60
00:03:27,150 --> 00:03:30,020
如果输入为正数或零 则返回 1

61
00:03:30,020 --> 00:03:32,784
如果输入为负数 则返回 0

62
00:03:32,784 --> 00:03:36,299
因此这些感知器可以看做节点组合

63
00:03:36,300 --> 00:03:41,035
第一个节点计算线性方程和权重输入

64
00:03:41,034 --> 00:03:44,969
第二个节点对结果应用阶跃函数

65
00:03:44,969 --> 00:03:46,305
可以用图表表示如下

66
00:03:46,305 --> 00:03:49,605
求和符号表示第一个节点的线性方程

67
00:03:49,604 --> 00:03:52,919
这个图表示第二个节点中的阶跃函数

68
00:03:52,919 --> 00:03:55,679
未来我们将使用不同的阶跃函数

69
00:03:55,680 --> 00:03:58,905
因此有必要在节点中指明了

70
00:03:58,905 --> 00:04:01,890
正如我们看到的 可以用两种方式来表示感知器

71
00:04:01,889 --> 00:04:06,094
左侧具有一个偏置单元 来自值为 1 的输入节点

72
00:04:06,094 --> 00:04:10,000
右侧在节点内具有偏差

