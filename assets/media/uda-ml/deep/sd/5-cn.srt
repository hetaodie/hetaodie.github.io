1
00:00:00,000 --> 00:00:02,240
现在进行一些数学运算

2
00:00:02,240 --> 00:00:05,490
我们将测试对应的水平轴用变量 X1 表示

3
00:00:05,490 --> 00:00:11,320
评分对应的垂直轴用变量 X2 表示

4
00:00:11,320 --> 00:00:14,250
这条区分蓝点和红点的界线

5
00:00:14,250 --> 00:00:17,675
将是一个线性方程

6
00:00:17,675 --> 00:00:22,820
画出来的是 2X1 + X2 - 18 = 0

7
00:00:22,820 --> 00:00:24,219
这意味着什么？

8
00:00:24,219 --> 00:00:27,629
意味着我们录取或拒绝学生的方法

9
00:00:27,629 --> 00:00:31,524
简单地表示为：这个等式表示得分

10
00:00:31,524 --> 00:00:34,734
得分是 2*Test + Grades - 18

11
00:00:34,734 --> 00:00:36,554
当学生来面试时 我们看看他们的得分

12
00:00:36,554 --> 00:00:38,015
如果得分为正数

13
00:00:38,015 --> 00:00:40,920
那么就录取了 如果为负数

14
00:00:40,920 --> 00:00:42,579
那么就拒绝了

15
00:00:42,579 --> 00:00:44,408
这叫做预测

16
00:00:44,408 --> 00:00:47,765
可以按照惯例 如果得分为 0 那么我们将录取该学生

17
00:00:47,765 --> 00:00:49,575
虽然最终影响不会太大

18
00:00:49,575 --> 00:00:53,140
这个线性方程就是我们模型

19
00:00:53,140 --> 00:00:54,810
在更一般的情况下

20
00:00:54,810 --> 00:00:56,603
我们的界线将是方程 W1X1 + W2X2 + b = 0

21
00:00:56,603 --> 00:01:04,549
我们用向量记法将此方程简写为 Wx + b = 0

22
00:01:04,549 --> 00:01:09,870
其中 W 是向量 (w1,w2) X 是向量 (x1,x2)

23
00:01:09,870 --> 00:01:13,364
我们直接算出这两个向量的积

24
00:01:13,364 --> 00:01:15,405
我们将 x 称为输入

25
00:01:15,405 --> 00:01:16,694
W 称为权重

26
00:01:16,694 --> 00:01:19,504
b 称为偏差

27
00:01:19,504 --> 00:01:22,625
对于坐标为 (X1,X2) 的学生 我们将用标签 y 表示

28
00:01:22,625 --> 00:01:26,188
我们将预测该标签

29
00:01:26,188 --> 00:01:29,278
如果学生被录取了 即蓝点

30
00:01:29,280 --> 00:01:31,358
那么标签 y = 1

31
00:01:31,358 --> 00:01:34,515
如果学生被拒了 即红点

32
00:01:34,515 --> 00:01:36,959
那么标签 y = 0

33
00:01:36,959 --> 00:01:40,859
因此 每个点都是 (X1,X2) 的形式

34
00:01:40,858 --> 00:01:45,718
y 为 1 时表示蓝点 为 0 时表示红点

35
00:01:45,718 --> 00:01:48,478
最后 我们的预测将称为 ŷ

36
00:01:48,480 --> 00:01:51,944
也就是预测标签是什么的算法

37
00:01:51,944 --> 00:01:55,340
这里 如果算法预测学生被录取

38
00:01:55,340 --> 00:01:59,090
也就是这条线上方的点 则 ŷ 为 1

39
00:01:59,090 --> 00:02:02,159
如果算法预测学生被拒 即这条线下方的点

40
00:02:02,159 --> 00:02:05,864
则 ŷ 为 0

41
00:02:05,864 --> 00:02:10,620
从数学角度来说 这表示如果 Wx + b 大于或等于 0 则 ŷ 为 1

42
00:02:10,620 --> 00:02:17,465
如果 Wx + b 小于 0 则 ŷ 为 0

43
00:02:17,465 --> 00:02:20,460
总结下 对于这条线上方的点 ŷ 等于 1

44
00:02:20,460 --> 00:02:23,300
对于下方的点 ŷ 等于 0

45
00:02:23,300 --> 00:02:30,319
对于蓝点 y 等于 1 对于红点 y 等于 0

46
00:02:30,318 --> 00:02:33,418
该算法的目标是

47
00:02:33,419 --> 00:02:36,419
让 ŷ 尽可能与 y 相似

48
00:02:36,419 --> 00:02:39,419
也就是找到一条让大部分蓝点在上方

49
00:02:39,419 --> 00:02:43,000
大部分红点在下方的界线

