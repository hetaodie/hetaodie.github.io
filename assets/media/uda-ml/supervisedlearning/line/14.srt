1
00:00:00,000 --> 00:00:01,350
所以在之前的例子中

2
00:00:01,350 --> 00:00:03,905
我们有一列输入栏和一列输出栏

3
00:00:03,904 --> 00:00:07,244
输入是房屋的大小 输出是价格

4
00:00:07,245 --> 00:00:09,845
所以我们这是个二维问题

5
00:00:09,845 --> 00:00:12,450
对价格的预测是一条直线

6
00:00:12,449 --> 00:00:16,309
方程是一个常数乘面积再加上另一个常数

7
00:00:16,309 --> 00:00:18,029
如果有多个输入栏应该会怎么办呢？

8
00:00:18,030 --> 00:00:20,450
例如 大小和学校质量

9
00:00:20,449 --> 00:00:22,739
现在我们得到一个三维图 因为

10
00:00:22,739 --> 00:00:25,414
我们有两个维度表示输入 一个维度表示输出

11
00:00:25,414 --> 00:00:27,413
现在我们这些点并不在平面上

12
00:00:27,413 --> 00:00:31,019
而是看起来像是漂浮在三维空间上的点

13
00:00:31,019 --> 00:00:34,130
这里我们要做的是拟合平面 而不是拟合直线

14
00:00:34,130 --> 00:00:38,905
方程也不再是常数乘以变量 再加上另一个常数

15
00:00:38,905 --> 00:00:41,910
而是常数乘以学校质量

16
00:00:41,909 --> 00:00:44,543
加上另一个常数乘以大小

17
00:00:44,543 --> 00:00:46,204
再加上第三个常数

18
00:00:46,204 --> 00:00:49,039
这是我们在三维中的情况

19
00:00:49,039 --> 00:00:51,210
那么在 n 维中会是什么呢？

20
00:00:51,210 --> 00:00:56,730
在这个案例中 我们有 n-1 列输入和一列输出

21
00:00:56,729 --> 00:00:58,299
例如输入包括大小

22
00:00:58,299 --> 00:01:00,617
学校质量 房间数量等等

23
00:01:00,618 --> 00:01:05,640
现在数据存在于 n 维空间 我们也采取相同做法

24
00:01:05,640 --> 00:01:08,340
所以对于输入我们有 n-1 个变量

25
00:01:08,340 --> 00:01:11,594
分别是 X1 X2 直到 Xn-1

26
00:01:11,594 --> 00:01:13,170
对于输出的预测

27
00:01:13,170 --> 00:01:16,085
我们只有一个变量 y-hat

28
00:01:16,084 --> 00:01:18,419
并且预测可以是 n-1 维的

29
00:01:18,420 --> 00:01:21,784
超平面 存在于 n 维中

30
00:01:21,784 --> 00:01:23,575
因为很难绘制 n 维图

31
00:01:23,575 --> 00:01:29,954
只能想象包含 n 个变量的线性方程

32
00:01:29,954 --> 00:01:35,280
y-hat = W1X1 + W2X2 +...+ Wn-1Xn-1 + Wn

33
00:01:35,280 --> 00:01:38,215
这是我们对多维度进行预测的做法

34
00:01:38,215 --> 00:01:40,924
为了找到权重 W1 到 Wn

35
00:01:40,924 --> 00:01:44,864
这个算法与包含两个变量的算法完全相同

36
00:01:44,864 --> 00:01:47,295
我们可以使用绝对值技巧或平方技巧

37
00:01:47,295 --> 00:01:50,549
或者计算平均绝对值或平方误差

38
00:01:50,549 --> 00:01:53,429
并且利用梯度下降法进行最小化

