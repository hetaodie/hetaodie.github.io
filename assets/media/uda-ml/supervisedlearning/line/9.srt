1
00:00:00,000 --> 00:00:02,899
在这节视频中 我们将要学习均方误差

2
00:00:02,899 --> 00:00:06,080
均方误差与绝对平方误差非常相似

3
00:00:06,080 --> 00:00:08,960
再来看下 这是我们的点和预测

4
00:00:08,960 --> 00:00:10,470
但是现在不是利用距离

5
00:00:10,470 --> 00:00:13,035
我们实际上要在旁边的线段 绘制一个正方形

6
00:00:13,035 --> 00:00:16,995
所以这个区域为 (y - y-hat) 的平方

7
00:00:16,995 --> 00:00:18,365
注意下这里没有负数

8
00:00:18,364 --> 00:00:20,709
所以我们不需要担心绝对值

9
00:00:20,710 --> 00:00:24,740
并且均方误差表示所有平方的平均数

10
00:00:24,739 --> 00:00:28,619
所以我们有个额外因子二分之一 便于后续使用

11
00:00:28,620 --> 00:00:31,050
所以这个误差是所有 (y - y-hat) 平方总和

12
00:00:31,050 --> 00:00:34,225
平均数的二分之一

13
00:00:34,225 --> 00:00:36,969
所以我们得到总和 称为完全平方误差

14
00:00:36,969 --> 00:00:41,004
而我们得到的平均数 不会在算法中有所区别

15
00:00:41,005 --> 00:00:44,160
注意一下 无论点位于直线的上方或下方

16
00:00:44,159 --> 00:00:46,919
平方总是为非负数

17
00:00:46,920 --> 00:00:50,789
因为任何实数的平方均为非负数

18
00:00:50,789 --> 00:00:53,280
这里的二分之一便于后续使用

19
00:00:53,280 --> 00:00:55,564
因为随后我们得到这个误差的导数

20
00:00:55,564 --> 00:00:57,809
另外 我们用这个误差乘以任何常数

21
00:00:57,810 --> 00:01:00,539
收敛过程中并未改变

22
00:01:00,539 --> 00:01:03,405
所以这个二分之一不会有任何影响

23
00:01:03,405 --> 00:01:05,900
所以这是误差的图示

24
00:01:05,900 --> 00:01:08,115
这里我们有一些点和一条直线

25
00:01:08,114 --> 00:01:12,334
误差为所有平方区域的平均数

26
00:01:12,334 --> 00:01:13,969
这是误差的图表

27
00:01:13,969 --> 00:01:15,599
当我们想下山

28
00:01:15,599 --> 00:01:18,899
我们到达误差尽可能小的地方

29
00:01:18,900 --> 00:01:22,500
同样也适用于平方区域平均数的最小化

