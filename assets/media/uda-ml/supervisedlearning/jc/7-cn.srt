1
00:00:00,000 --> 00:00:05,190
有一个简单算法 大家可能注意到

2
00:00:05,190 --> 00:00:07,589
权重公式也可以写成

3
00:00:07,589 --> 00:00:12,914
正确分类的点的数量除以错误分类的点的数量所得商的自然对数

4
00:00:12,914 --> 00:00:16,064
要得到这个公式

5
00:00:16,065 --> 00:00:19,455
只需要将自然对数内分子 分母分别乘以点的数量即可

6
00:00:19,454 --> 00:00:24,539
所以第一个模型中 我们有 7 个正确分类的点和 1 个错误分类的点

7
00:00:24,539 --> 00:00:30,074
因此 权重即是 7 除以 1 所得商的自然对数 即 1.95

8
00:00:30,074 --> 00:00:33,089
同样 第二个模型的权重是 4 除以 4 所得商的自然对数

9
00:00:33,090 --> 00:00:36,405
即 1 的自然对数 是 0

10
00:00:36,405 --> 00:00:40,755
这个结果正确 因为准确率是 50% 所以这个模型没有用

11
00:00:40,755 --> 00:00:44,700
第三个模型中 有 2 个正确分类的点和 6 个错误分类的点

12
00:00:44,700 --> 00:00:49,170
所以这个模型的权重是 2 除以 6 所得商的自然对数

13
00:00:49,170 --> 00:00:52,335
即负的 1.099

14
00:00:52,335 --> 00:00:54,359
注意这个权重值是负数

15
00:00:54,359 --> 00:00:57,119
这意味着我们不舍弃这个模型

16
00:00:57,119 --> 00:01:00,884
但我们采纳与其相反的决策 因为这个模型大多数时候都是错误的

17
00:01:00,884 --> 00:01:02,429
那这两个模型呢？

18
00:01:02,429 --> 00:01:05,219
第一个模型的权重是 8 除以 0 所得商的自然对数

19
00:01:05,219 --> 00:01:08,799
因为这个模型不犯错 但这是什么意思？

20
00:01:08,799 --> 00:01:12,819
更糟糕的是 第二个模型的权重是 0 除以 8 所得商的自然对数

21
00:01:12,819 --> 00:01:17,154
也就是 0 的自然对数 根本不存在 那要怎么做？

22
00:01:17,155 --> 00:01:20,379
我们可以设想 8 除以 0 的结果是无穷大

23
00:01:20,379 --> 00:01:23,229
所以第一个模型的权重是正无穷

24
00:01:23,230 --> 00:01:26,500
第二个模型  我们可以认为 0 的自然对数是负无穷

25
00:01:26,500 --> 00:01:28,989
所以第二个模型的权重是负无穷

26
00:01:28,989 --> 00:01:32,004
这有道理吗？我们来想一下

27
00:01:32,004 --> 00:01:34,299
这打乱了我们的计算方式

28
00:01:34,299 --> 00:01:38,289
但如果我们的弱学习器中 有一个非常棒地完成了分类任务

29
00:01:38,290 --> 00:01:40,015
那几乎就大功告成了 对吧？

30
00:01:40,015 --> 00:01:42,670
也就是说 无穷大的相信这个模型的建议

31
00:01:42,670 --> 00:01:45,515
不听其他模型的建议 第二个模型也是一样

32
00:01:45,515 --> 00:01:48,935
如果有一个弱学习器在分类时候把所有点都分错了

33
00:01:48,935 --> 00:01:52,325
那么采纳与它相反的决策几乎就正确地完成了分类任务了

34
00:01:52,325 --> 00:01:55,310
所以给它赋予一个负无穷的权重就意味着

35
00:01:55,310 --> 00:01:56,780
听这个模型的建议

36
00:01:56,780 --> 00:01:59,435
但采纳与它相反的决策 不要管其他的模型

37
00:01:59,435 --> 00:02:03,034
事实上 这两种模型不太可能发生

38
00:02:03,034 --> 00:02:05,465
所以没什么可担心的

39
00:02:05,465 --> 00:02:07,520
但为了一致性检查 仍然有必要

40
00:02:07,519 --> 00:02:10,729
来分析这样的极端案例

